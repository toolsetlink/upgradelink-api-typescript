// This file is auto-generated, don't edit it
/**
 * @returns timeRFC3339
 */
import * as $tea from '@alicloud/tea-typescript';
import * as crypto from 'crypto';

export default class Client {

  static timeRFC3339(): string {
    const date = new Date();
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');

    const tzOffset = date.getTimezoneOffset();
    const tzSign = tzOffset <= 0 ? '+' : '-';
    const absTzOffset = Math.abs(tzOffset);
    const tzHours = String(Math.floor(absTzOffset / 60)).padStart(2, '0');
    const tzMinutes = String(absTzOffset % 60).padStart(2, '0');

    return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}${tzSign}${tzHours}:${tzMinutes}`;
  }

  /**
   * @remarks
   * 生成16位随机Nonce
   * @returns generateNonce
   */
  static generateNonce(): string {
    const bytes = crypto.randomBytes(8);
    return bytes.toString('hex');
  }
  /**
   * @remarks
   * 生成签名
   * @returns generateSignature
   */
  static generateSignature(
      body: string,
      nonce: string,
      secretKey: string,
      timestamp: string,
      uri: string
  ): string {
    const parts: string[] = [];

    if (body !== '') {
      parts.push(`body=${body}`);
    }

    parts.push(
        `nonce=${nonce}`,
        `secretKey=${secretKey}`,
        `timestamp=${timestamp}`,
        `url=${uri}`
    );

    const signStr = parts.join('&');
    return crypto.createHash('md5').update(signStr).digest('hex');
  }

}
